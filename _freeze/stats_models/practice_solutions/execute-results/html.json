{
  "hash": "c6d4e6d21cb6f41e862c476b08433dc6",
  "result": {
    "engine": "jupyter",
    "markdown": "---\nauthor: \"Ryan M. Moore, PhD\"\ndate-modified: last-modified\ndate: \"2025-04-24\"\njupyter: python3\n---\n\n# Practice Problem Solutions â€” @sec-stats-models\n\nThe solutions use the following imports:\n\n::: {#b20eadce .cell execution_count=1}\n``` {.python .cell-code}\nimport numpy as np\nimport pandas as pd\nimport scipy.cluster as cluster\nimport scipy.stats as stats\nimport seaborn as sns\nimport statsmodels.formula.api\n```\n:::\n\n\n#### Solution @sec-problem-8.1\n\n::: {#2b902ffc .cell execution_count=2}\n``` {.python .cell-code}\nnp.random.seed(2503478)\ngroup_A = stats.norm(loc=10, scale=2).rvs(30)\ngroup_B = stats.norm(loc=15, scale=2).rvs(30)\nresult = stats.ttest_ind(group_A, group_B)\nprint(result)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nTtestResult(statistic=np.float64(-8.473531241332175), pvalue=np.float64(9.899983754486164e-12), df=np.float64(58.0))\n```\n:::\n:::\n\n\n#### Solution @sec-problem-8.2\n\n::: {#e42b689e .cell execution_count=3}\n``` {.python .cell-code}\nnp.random.seed(493567)\ngroup_A = stats.norm(loc=10, scale=2).rvs(30)\ngroup_B = stats.norm(loc=15, scale=2).rvs(30)\ngroup_C = stats.norm(loc=11, scale=2).rvs(30)\nresult = stats.f_oneway(group_A, group_B, group_C)\nprint(result)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nF_onewayResult(statistic=np.float64(56.614548038664914), pvalue=np.float64(1.7891834179400852e-16))\n```\n:::\n:::\n\n\n#### Solution @sec-problem-8.3\n\n::: {#8c8d9c2b .cell execution_count=4}\n``` {.python .cell-code}\nresult = stats.tukey_hsd(group_A, group_B, group_C)\nprint(result)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nTukey's HSD Pairwise Group Comparisons (95.0% Confidence Interval)\nComparison  Statistic  p-value  Lower CI  Upper CI\n (0 - 1)     -4.656     0.000    -5.787    -3.525\n (0 - 2)     -0.643     0.369    -1.774     0.488\n (1 - 0)      4.656     0.000     3.525     5.787\n (1 - 2)      4.013     0.000     2.882     5.144\n (2 - 0)      0.643     0.369    -0.488     1.774\n (2 - 1)     -4.013     0.000    -5.144    -2.882\n\n```\n:::\n:::\n\n\n#### Solution @sec-problem-8.4\n\n::: {#e21b8458 .cell execution_count=5}\n``` {.python .cell-code}\nnp.random.seed(932847)\nx1 = np.random.uniform(-10, 10, 50)\nx2 = np.random.uniform(-10, 10, 50)\ny = 3 * x1 + np.random.normal(0, 2, 50)\ndf = pd.DataFrame({\"X1\": x1, \"X2\": x2, \"Y\": y})\nmodel = statsmodels.formula.api.ols(\"Y ~ X1 + X2\", data=df).fit()\nprint(model.summary().tables[1])\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n==============================================================================\n                 coef    std err          t      P>|t|      [0.025      0.975]\n------------------------------------------------------------------------------\nIntercept     -0.4118      0.295     -1.395      0.170      -1.006       0.182\nX1             3.0064      0.046     65.950      0.000       2.915       3.098\nX2            -0.0319      0.053     -0.606      0.547      -0.138       0.074\n==============================================================================\n```\n:::\n:::\n\n\n#### Solution @sec-problem-8.5\n\nTwo clusters mainly separate _setosa_ from _versicolor_ and _virginica_, which makes biological sense given that _setosa_ is the most distinct species.\n\n::: {#b06b2a79 .cell execution_count=6}\n``` {.python .cell-code}\niris = pd.read_csv(\"../_data/iris.csv\")\nsns.pairplot(iris, hue=\"Species\")\n_centroids, labels = cluster.vq.kmeans2(iris.drop(columns=\"Species\"), k=2)\nsns.pairplot(iris.assign(Cluster=labels), hue=\"Cluster\")\n```\n\n::: {.cell-output .cell-output-display}\n![](practice_solutions_files/figure-html/cell-7-output-1.png){}\n:::\n\n::: {.cell-output .cell-output-display}\n![](practice_solutions_files/figure-html/cell-7-output-2.png){}\n:::\n:::\n\n\n",
    "supporting": [
      "practice_solutions_files/figure-html"
    ],
    "filters": [],
    "includes": {}
  }
}