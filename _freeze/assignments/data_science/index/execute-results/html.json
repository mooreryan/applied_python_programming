{
  "hash": "bb603d10e7ddbf99cb941e01afbdb759",
  "result": {
    "engine": "jupyter",
    "markdown": "---\nauthor: \"Ryan M. Moore, PhD\"\ndate-modified: last-modified\ndate: \"2025-04-13\"\njupyter: python3\n---\n\n# Assignment 3: Using Python for Data Science {.unnumbered}\n\n_Note: To complete the assignment, you will need the material contained in the [data directory](https://github.com/mooreryan/applied_python_programming/blob/main/assignments/data_science/data). There, you will find the CSV files for the assignment. These files are slightly different than the ones from Chs. 7 & 8._\n\n## Overview\n\nIn this assignment, you will work with common Python data science packages to analyze cancer death rates and their relationship to demographic and social factors across different states. You'll use packages such as pandas, NumPy, SciPy, Seaborn, and statsmodels to manipulate data, perform statistical analysis, and create visualizations.\n\n## Learning Objectives\n\n- Import and use common Python data science libraries\n- Clean and prepare datasets for analysis\n- Merge multiple datasets using pandas\n- Normalize data to account for population differences\n- Perform statistical tests (ANOVA, Tukey's HSD)\n- Create data visualizations for correlation analysis\n- Conduct Principal Component Analysis (PCA)\n\n## Data Files\n\nYou will work with several datasets:\n\n- `cancer_deaths.csv`: Cancer death rates by state\n- `state_demographics.csv`: Demographic information by state\n- `bls_regions.csv`: Bureau of Labor Statistics regions for each state\n- `social_determinants.csv`: Social determinants of health by state\n\n## Instructions\n\n### Part 0: Install Needed Packages\n\nEnsure that you have the following packages installed:\n\n- numpy\n- pandas\n- scipy\n- seaborn\n- statsmodels\n\nOnce you have them installed, you can put the following codeblock near the top of your Quarto document.\n\n::: {#009a5049 .cell execution_count=1}\n``` {.python .cell-code}\nimport numpy as np\nimport pandas as pd\nimport scipy.stats as stats\nimport seaborn as sns\n\nfrom statsmodels.stats.multicomp import pairwise_tukeyhsd\nfrom statsmodels.multivariate.pca import PCA\n\npd.set_option(\"display.max_rows\", 6)\n```\n:::\n\n\n### Part 1: Data Preparation\n\n1. Load the cancer death rates dataset\n2. Load and prepare the state demographics dataset:\n  - Extract state populations into a separate table\n  - Convert raw demographic counts to rates per 1000 people\n3. Load the BLS regions dataset\n4. Load and prepare the social determinants dataset:\n  - Merge with state population data\n  - Convert raw counts to rates per 1000 people\n  - Pivot the data frame to have variables as columns and states as rows\n\nNotes:\n  - Use pandas\n  - See Ch. 7 for an example\n\n### Part 2: Data Exploration\n\n#### Examine Predictors By Themselves\n\n1. Merge state demographics, state regions, and social determinants data into a single data frame called `predictors`.  You will need to chain together multiple `merge()` calls.  Use a `left` join to ensure that all states remain in the resulting data frame.\n2. Create a correlation heatmap (`clustermap()`) to explore relationships between predictors\n\nNotes:\n  - Use seaborn's `clustermap()` for the heatmap\n  - See Ch. 7 for an example of this\n\n#### Examine Cancer Death Rates & Predictors\n\n1. Join the cancer deaths data frame to the predictors data frame (use a `left` join again) called `cancer`\n2. Generate a correlation matrix from the `cancer` data frame\n  - This will give you a square matrix, which you need to filter as follows:\n    - Keep `Cancer Death Rate.Total`, `Cancer Death Rate.Breast`, `Cancer Death Rate.Colorectal`, `Cancer Death Rate.Lung` as columns\n    - Remove those same four variables from the rows\n    - Run the correlation heatmap on the resulting non-square correlation matrix\n\nNotes:\n  - Use seaborn's `clustermap()` for the heatmap\n  - See Ch. 7 for an example of this (there is an almost identical example for the filtering in that chapter)\n\n### Part 3: Statistical Testing\n\n1. Analyze cancer death rates by region\n  - Perform an ANOVA test to determine if there are significant differences between regions\n  - If there is a significant difference, conduct Tukey's HSD post-hoc test to identify which specific regions differ\n\nNotes:\n  - Use SciPy for the ANOVA\n  - Use statsmodels for the Tukey's HSD\n  - See Ch. 8 for example code\n\n### Part 4: Principal Components Analysis (PCA)\n\n1. Perform Principal Component Analysis (PCA):\n  - Prepare the data by dropping non-numeric columns\n  - Run PCA with standardization\n  - Create a scatter plot of the first two principal components, colored by region\n\nNotes:\n  - Use statsmodels for the PCA\n  - Use seaborn for the plot\n  - See Ch. 8 for example code for both the PCA and the plot function\n\n### Part 5: Interpretation\n\nThis is an assignment, not a miniproject, so you only have to write a single sentence for these three items.  E.g., \"the p-value for the ANOVA was 0.12 so we do not reject the null hypothesis\", or, \"strong trends in the PCA plot were seen: states grouped by BLS region\", that sort of thing.\n\n1. Comment on the correlation patterns you observe in the heatmap\n2. Interpret the results of the ANOVA and Tukey's HSD tests\n3. Analyze the PCA results and discuss any patterns observed\n\n## Requirements\n\n- Create your solution in a Quarto notebook\n- Use the requested libraries\n- Your code should be well-commented and organized\n  - Each logical section of code should be in its own code block (like how I wrote previous chapters and assignments)\n  - Above code blocks, write a sentence of two describing what the following code block is about to do\n- Include the requested plots\n- Provide concise interpretations of your statistical findings (just one sentence is necessary)\n\n## Submission\n\n- Turn in a Quarto notebook with your name in the title, e.g., `assignment_3__ryan_moore.qmd`\n- This notebook should contain your code, visualizations, and interpretations.\n\n## Hints\n\n- Pay attention to how data is normalized to account for different state populations (see Ch. 7 for an example)\n- When merging datasets, be careful with the join type (left, right, inner, outer)\n- Pretty much everything you need to do has a very similar example in either Ch. 7 or Ch. 8, but you may need to go back to the documentation for the given packages for more info on the required functions and parameters.\n\nThis assignment will help you gain practical experience with data manipulation, statistical analysis, and visualization using Python's data science ecosystem.  This will be a bit of a jump in difficulty, since you will need to put together example code from the chapters/tutorials rather than me giving it to you in this document.  Good luck!\n\n",
    "supporting": [
      "index_files"
    ],
    "filters": [],
    "includes": {}
  }
}